#!/usr/bin/perl

=begin comment
Distinct powers
Problem 29

Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

    22=4, 23=8, 24=16, 25=32
    32=9, 33=27, 34=81, 35=243
    42=16, 43=64, 44=256, 45=1024
    52=25, 53=125, 54=625, 55=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
=cut

use Data::Dumper;

# Not even gonna solve it
# Just count power terms and remove half for each square
sub distinct_powers {
  my ($a, $b) = @_;

  %powmap = ();
  %seen = ();
  for(my $i = 2; $i<=sqrt($a); $i++){
    $j = $i**2;
    $pow = 2;
    if ($j > $a){
      last;
    }
    while ($j <=$a){
      if (not exists($powmap{$j})){
        my @temp = ($i, $pow);
        $powmap{$j} = [@temp];
      }
      $j*=$i;
      $pow++;
    }
  }
  my @k = keys%powmap;
  print "Powermap @k\n";
  for(my $i = 2; $i<=$a; $i++){
    my  $m = 1;
    my  $v = $i;
    if (exists($powmap{$i})){
      print "Power Exists @{$powmap{$i}}\n";
      ($v, $m) = @{$powmap{$i}};
      #$v = @res[0];
      #$m = @res[1];
      print "Exists $v, $m\n";
    }
    for(my $p = 2; $p<=$b; $p++){
      $val = $p*$m;
      #print"$v, $val\n";
      if (not exists($seen{$v,$val})){
        #print "Added $v, $val\n";
        $seen{$v,$val} = 1;
      } else{
        print "Skipped $i, $p\n";
      }
    }
  }
  #print Dumper(%seen);
  @k = keys%seen;
  return (scalar @k);
}

$a = 100;
$b = 100;
$res = distinct_powers($a, $b);
print "Distinct powers for a $a, b $b = $res\n";

